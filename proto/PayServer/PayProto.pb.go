// Code generated by protoc-gen-go.
// source: PayProto.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	PayProto.proto

It has these top-level messages:
	Order
	DeviceInfo
	OrderReply
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	ZoneID      string      `protobuf:"bytes,1,opt,name=ZoneID" json:"ZoneID,omitempty"`
	UUID        string      `protobuf:"bytes,2,opt,name=UUID" json:"UUID,omitempty"`
	UserName    string      `protobuf:"bytes,3,opt,name=UserName" json:"UserName,omitempty"`
	ProductID   string      `protobuf:"bytes,4,opt,name=ProductID" json:"ProductID,omitempty"`
	Amount      string      `protobuf:"bytes,5,opt,name=Amount" json:"Amount,omitempty"`
	Extra       string      `protobuf:"bytes,6,opt,name=Extra" json:"Extra,omitempty"`
	GameID      string      `protobuf:"bytes,7,opt,name=GameID" json:"GameID,omitempty"`
	Channel     string      `protobuf:"bytes,8,opt,name=Channel" json:"Channel,omitempty"`
	DeviceType  string      `protobuf:"bytes,9,opt,name=DeviceType" json:"DeviceType,omitempty"`
	IMEI        string      `protobuf:"bytes,10,opt,name=IMEI" json:"IMEI,omitempty"`
	MAC         string      `protobuf:"bytes,11,opt,name=MAC" json:"MAC,omitempty"`
	IPv4        string      `protobuf:"bytes,12,opt,name=IPv4" json:"IPv4,omitempty"`
	IPv6        string      `protobuf:"bytes,13,opt,name=IPv6" json:"IPv6,omitempty"`
	OS          string      `protobuf:"bytes,14,opt,name=OS" json:"OS,omitempty"`
	MODE        string      `protobuf:"bytes,15,opt,name=MODE" json:"MODE,omitempty"`
	ProductName string      `protobuf:"bytes,16,opt,name=ProductName" json:"ProductName,omitempty"`
	DeviceId    string      `protobuf:"bytes,17,opt,name=DeviceId" json:"DeviceId,omitempty"`
	DeviceInfo  *DeviceInfo `protobuf:"bytes,18,opt,name=DeviceInfo" json:"DeviceInfo,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto1.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Order) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *Order) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Order) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Order) GetProductID() string {
	if m != nil {
		return m.ProductID
	}
	return ""
}

func (m *Order) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Order) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *Order) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *Order) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *Order) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *Order) GetIMEI() string {
	if m != nil {
		return m.IMEI
	}
	return ""
}

func (m *Order) GetMAC() string {
	if m != nil {
		return m.MAC
	}
	return ""
}

func (m *Order) GetIPv4() string {
	if m != nil {
		return m.IPv4
	}
	return ""
}

func (m *Order) GetIPv6() string {
	if m != nil {
		return m.IPv6
	}
	return ""
}

func (m *Order) GetOS() string {
	if m != nil {
		return m.OS
	}
	return ""
}

func (m *Order) GetMODE() string {
	if m != nil {
		return m.MODE
	}
	return ""
}

func (m *Order) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *Order) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Order) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

// 设备信息
type DeviceInfo struct {
	GameID     string `protobuf:"bytes,1,opt,name=GameID" json:"GameID,omitempty"`
	Channel    string `protobuf:"bytes,2,opt,name=Channel" json:"Channel,omitempty"`
	DeviceType string `protobuf:"bytes,3,opt,name=DeviceType" json:"DeviceType,omitempty"`
	IMEI       string `protobuf:"bytes,4,opt,name=IMEI" json:"IMEI,omitempty"`
	MAC        string `protobuf:"bytes,5,opt,name=MAC" json:"MAC,omitempty"`
	IPv4       string `protobuf:"bytes,6,opt,name=IPv4" json:"IPv4,omitempty"`
	IPv6       string `protobuf:"bytes,7,opt,name=IPv6" json:"IPv6,omitempty"`
	OS         string `protobuf:"bytes,8,opt,name=OS" json:"OS,omitempty"`
	Latitude   string `protobuf:"bytes,9,opt,name=Latitude" json:"Latitude,omitempty"`
	Longitude  string `protobuf:"bytes,10,opt,name=Longitude" json:"Longitude,omitempty"`
	DeviceId   string `protobuf:"bytes,11,opt,name=DeviceId" json:"DeviceId,omitempty"`
}

func (m *DeviceInfo) Reset()                    { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string            { return proto1.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()               {}
func (*DeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeviceInfo) GetGameID() string {
	if m != nil {
		return m.GameID
	}
	return ""
}

func (m *DeviceInfo) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *DeviceInfo) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *DeviceInfo) GetIMEI() string {
	if m != nil {
		return m.IMEI
	}
	return ""
}

func (m *DeviceInfo) GetMAC() string {
	if m != nil {
		return m.MAC
	}
	return ""
}

func (m *DeviceInfo) GetIPv4() string {
	if m != nil {
		return m.IPv4
	}
	return ""
}

func (m *DeviceInfo) GetIPv6() string {
	if m != nil {
		return m.IPv6
	}
	return ""
}

func (m *DeviceInfo) GetOS() string {
	if m != nil {
		return m.OS
	}
	return ""
}

func (m *DeviceInfo) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *DeviceInfo) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *DeviceInfo) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type OrderReply struct {
	OrderID    string `protobuf:"bytes,1,opt,name=OrderID" json:"OrderID,omitempty"`
	Timestamp  string `protobuf:"bytes,2,opt,name=Timestamp" json:"Timestamp,omitempty"`
	Sign       string `protobuf:"bytes,3,opt,name=Sign" json:"Sign,omitempty"`
	PreOrderID string `protobuf:"bytes,4,opt,name=PreOrderID" json:"PreOrderID,omitempty"`
	Random     string `protobuf:"bytes,5,opt,name=Random" json:"Random,omitempty"`
}

func (m *OrderReply) Reset()                    { *m = OrderReply{} }
func (m *OrderReply) String() string            { return proto1.CompactTextString(m) }
func (*OrderReply) ProtoMessage()               {}
func (*OrderReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OrderReply) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderReply) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *OrderReply) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *OrderReply) GetPreOrderID() string {
	if m != nil {
		return m.PreOrderID
	}
	return ""
}

func (m *OrderReply) GetRandom() string {
	if m != nil {
		return m.Random
	}
	return ""
}

func init() {
	proto1.RegisterType((*Order)(nil), "proto.Order")
	proto1.RegisterType((*DeviceInfo)(nil), "proto.DeviceInfo")
	proto1.RegisterType((*OrderReply)(nil), "proto.OrderReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Pay service

type PayClient interface {
	// 创建订单
	BuildOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderReply, error)
}

type payClient struct {
	cc *grpc.ClientConn
}

func NewPayClient(cc *grpc.ClientConn) PayClient {
	return &payClient{cc}
}

func (c *payClient) BuildOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderReply, error) {
	out := new(OrderReply)
	err := grpc.Invoke(ctx, "/proto.Pay/BuildOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Pay service

type PayServer interface {
	// 创建订单
	BuildOrder(context.Context, *Order) (*OrderReply, error)
}

func RegisterPayServer(s *grpc.Server, srv PayServer) {
	s.RegisterService(&_Pay_serviceDesc, srv)
}

func _Pay_BuildOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayServer).BuildOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Pay/BuildOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayServer).BuildOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pay_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Pay",
	HandlerType: (*PayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildOrder",
			Handler:    _Pay_BuildOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "PayProto.proto",
}

func init() { proto1.RegisterFile("PayProto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x6e, 0xda, 0x40,
	0x10, 0xc6, 0x6b, 0x1b, 0xf3, 0x67, 0xa0, 0x34, 0xac, 0xaa, 0x6a, 0x84, 0xaa, 0x0a, 0x71, 0xca,
	0x89, 0xaa, 0x69, 0xc4, 0x3d, 0x89, 0x51, 0x65, 0x29, 0x14, 0x0b, 0xc2, 0xa5, 0xb7, 0x2d, 0xde,
	0x52, 0xab, 0xec, 0x2e, 0x72, 0x0c, 0x2a, 0x6f, 0x51, 0xf5, 0xc9, 0xfa, 0x48, 0xd5, 0xce, 0xfa,
	0x5f, 0x44, 0xd3, 0x4b, 0x32, 0xdf, 0x37, 0x1f, 0xec, 0xce, 0x6f, 0x16, 0xe8, 0x47, 0xfc, 0x14,
	0xa5, 0x3a, 0xd3, 0x93, 0xbd, 0xf9, 0xcb, 0x7c, 0xfa, 0x37, 0xfe, 0xe3, 0x81, 0xbf, 0x48, 0x63,
	0x91, 0xb2, 0x37, 0xd0, 0xfc, 0xa2, 0x95, 0x08, 0x03, 0x74, 0x46, 0xce, 0x65, 0x67, 0x99, 0x2b,
	0xc6, 0xa0, 0xb1, 0x5e, 0x87, 0x01, 0xba, 0xe4, 0x52, 0xcd, 0x86, 0xd0, 0x5e, 0x3f, 0x8a, 0xf4,
	0x33, 0x97, 0x02, 0x3d, 0xf2, 0x4b, 0xcd, 0xde, 0x42, 0x27, 0x4a, 0x75, 0x7c, 0xd8, 0x64, 0x61,
	0x80, 0x0d, 0x6a, 0x56, 0x86, 0x39, 0xe5, 0x46, 0xea, 0x83, 0xca, 0xd0, 0xb7, 0xa7, 0x58, 0xc5,
	0x5e, 0x83, 0x3f, 0xfb, 0x99, 0xa5, 0x1c, 0x9b, 0x64, 0x5b, 0x61, 0xd2, 0x9f, 0xb8, 0x34, 0x77,
	0x6a, 0xd9, 0xb4, 0x55, 0x0c, 0xa1, 0x75, 0xf7, 0x9d, 0x2b, 0x25, 0x76, 0xd8, 0xa6, 0x46, 0x21,
	0xd9, 0x3b, 0x80, 0x40, 0x1c, 0x93, 0x8d, 0x78, 0x38, 0xed, 0x05, 0x76, 0xa8, 0x59, 0x73, 0xcc,
	0x34, 0xe1, 0x7c, 0x16, 0x22, 0xd8, 0x69, 0x4c, 0xcd, 0x2e, 0xc0, 0x9b, 0xdf, 0xdc, 0x61, 0x97,
	0x2c, 0x53, 0x52, 0x2a, 0x3a, 0x5e, 0x63, 0x2f, 0x4f, 0x45, 0xc7, 0xeb, 0xdc, 0x9b, 0xe2, 0xcb,
	0xd2, 0x9b, 0xb2, 0x3e, 0xb8, 0x8b, 0x15, 0xf6, 0xc9, 0x71, 0x17, 0x2b, 0x93, 0x99, 0x2f, 0x82,
	0x19, 0xbe, 0xb2, 0x19, 0x53, 0xb3, 0x11, 0x74, 0xf3, 0xf1, 0x09, 0xd7, 0x05, 0xb5, 0xea, 0x96,
	0xa1, 0x69, 0x6f, 0x18, 0xc6, 0x38, 0xb0, 0x34, 0x0b, 0xcd, 0x3e, 0x14, 0xf3, 0x84, 0xea, 0x9b,
	0x46, 0x36, 0x72, 0x2e, 0xbb, 0x57, 0x03, 0xbb, 0xc2, 0x49, 0xd5, 0x58, 0xd6, 0x42, 0xe3, 0xdf,
	0x6e, 0xfd, 0x33, 0x35, 0x86, 0xce, 0x73, 0x0c, 0xdd, 0xff, 0x31, 0xf4, 0x9e, 0x65, 0xd8, 0x38,
	0x67, 0xe8, 0x9f, 0x33, 0x6c, 0xfe, 0x83, 0x61, 0xeb, 0x8c, 0x61, 0xbb, 0x64, 0x38, 0x84, 0xf6,
	0x3d, 0xcf, 0x92, 0xec, 0x10, 0x17, 0xfb, 0x2b, 0xb5, 0x79, 0x5b, 0xf7, 0x5a, 0x6d, 0x6d, 0xd3,
	0xae, 0xb0, 0x32, 0x9e, 0x70, 0xec, 0x3e, 0xe5, 0x38, 0xfe, 0xe5, 0x00, 0xd0, 0x3b, 0x5f, 0x8a,
	0xfd, 0xee, 0x64, 0x86, 0x27, 0x55, 0x52, 0x29, 0xa4, 0x39, 0xe2, 0x21, 0x91, 0xe2, 0x31, 0xe3,
	0x72, 0x9f, 0x83, 0xa9, 0x0c, 0x33, 0xc0, 0x2a, 0xd9, 0xaa, 0x1c, 0x0a, 0xd5, 0x06, 0x57, 0x94,
	0x8a, 0xe2, 0xeb, 0x2c, 0x94, 0x9a, 0x63, 0x16, 0xb0, 0xe4, 0x2a, 0xd6, 0xb2, 0x78, 0xf2, 0x56,
	0x5d, 0x4d, 0xc1, 0x8b, 0xf8, 0x89, 0xbd, 0x07, 0xb8, 0x3d, 0x24, 0xbb, 0xd8, 0xfe, 0x0a, 0x7b,
	0xf9, 0x6e, 0x49, 0x0d, 0x07, 0x75, 0x45, 0x37, 0x1f, 0xbf, 0xb8, 0xed, 0x01, 0x6c, 0xb4, 0x9c,
	0xa8, 0x1f, 0x5b, 0x2e, 0xc5, 0xd7, 0x26, 0x25, 0x3e, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x0b,
	0xab, 0x9e, 0x78, 0xe0, 0x03, 0x00, 0x00,
}
